<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.naver.dcancer.DAO.HQDAO">
	<select id="pagingData" resultType="int">
		select count(${data}) totalLine from ${bbs}
	</select>
	<update id="hitupdate">
		update ${bbs} set hit=hit+1 where no=${no}
	</update>
	<select id="noticeList" resultType="com.naver.dcancer.DTO.NoticeDTO">
		select * from
		(select * from
		(select no, title, e.ename writer, to_char(writedate,'YY-MM-DD') writedate,hit from noticeBBS n join empInfo e on n.empno = e.empno
		 order by no desc) 
		<![CDATA[where rownum<=${linePerPage}*${nowPage} order by no asc]]>)
		<choose>
		<when test="nowPage!=totalPage">  
		<![CDATA[where rownum<=${linePerPage} order by no desc]]>
		</when>
		<when test="nowPage==totalPage">
		<![CDATA[where rownum<=${lastPageLine} order by no desc]]>
		</when>
		</choose>   
	</select>
	<select id="noticeView" resultType="com.naver.dcancer.DTO.NoticeDTO">
		select no, title, e.ename writer, n.empno, content, writeDate from noticeBBS n join empInfo e on n.empno = e.empno where no=${param1}
	</select>
	<insert id="noticeInsert">
		insert into noticeBBS(no, empno, title, content) values(notice_sq.nextval, ${empno}, #{title},#{content})
	</insert>
	<update id="noticeUpdate">
		update noticeBBS set title=#{title}, content=#{content} where no=${no} and empno=${empno}
	</update>
	<delete id="noticeDelete">
		delete from noticeBBS where no=${no}
	</delete>
	<select id="sellerList" resultType="com.naver.dcancer.DTO.SellerDTO">
		
		select * from
		(select * from
		(select sellercode, sellerceo, sellername, sellerno, sellertel, sellerfax from sellerinfo
		 order by sellercode desc) 
		<![CDATA[where rownum<=${linePerPage}*${nowPage} order by sellercode asc]]>)
		<choose>
		<when test="nowPage!=totalPage">  
		<![CDATA[where rownum<=${linePerPage} order by sellercode desc]]>
		</when>
		<when test="nowPage==totalPage">
		<![CDATA[where rownum<=${lastPageLine} order by sellercode desc]]>
		</when>
		</choose>   
	</select>
	<update id="sellerUpdate">
		update sellerInfo set sellerceo = #{sellerceo}, sellername= #{sellername}, sellertel = #{sellertel}, sellerfax=#{sellerfax} where sellercode = ${sellercode}
	</update>
	<insert id="sellerInsert">
		insert into sellerInfo(sellercode, sellername, sellerceo, sellertel, sellerfax, sellerno) values (seller_sq.nextval, #{sellername}, #{sellerceo}, #{sellertel}, #{sellerfax},#{sellerno})
	</insert>
	<delete id="sellerDel">
		delete from sellerInfo where sellercode=#{sellercode}
	</delete>
	<select id="sellerInfo" resultType="com.naver.dcancer.DTO.SellerDTO">
		select sellername,sellercode from sellerInfo
	</select>
	<select id="lastGoodNo" resultType="int">
		select max(goodno) goodno from (select count(goodno) goodno from goodinfo union (select goodno from (select goodno from goodinfo order by goodno desc) where rownum=1))
	</select>
	<select id="lastBrandcode" resultType="int">
		select max(brandcode) brandcode from (select count(brandcode) brandcode from (select distinct brandcode from goodinfo) union (select brandcode from (select brandcode from goodinfo order by brandcode desc) where rownum=1))
	</select>
	<insert id="goodinsert" parameterType="java.util.List">
		<foreach item="good" collection="list" separator=" " open="insert all" close="select * from dual">
		 	into goodInfo(GOODNO, SELLERCODE, classifyno, name ,model, buyprice, sellprice, brandcode) 
		 	values(${good.goodno}, #{good.Sellercode}, #{good.classifyno}, #{good.name} ,#{good.model}, ${good.buyprice}, ${good.sellprice}, ${good.brandcode})
		</foreach>
	</insert>
	<select id="goodlist" resultType="com.naver.dcancer.DTO.goodDTO">
		select * from
		(select * from
		(select distinct name, brandcode, g.sellercode, sellername, classifyno, buyprice, sellprice from goodinfo g join sellerinfo s on g.sellercode=s.sellercode 
		<if test="searchWord!=null">
		and ${searchKey} like '%${searchWord}%'
		</if>
		order by sellername desc) 
		<![CDATA[where rownum<=${linePerPage}*${nowPage} order by sellercode asc]]>)
		<choose>
		<when test="nowPage!=totalPage">  
		<![CDATA[where rownum<=${linePerPage} order by sellercode desc]]>
		</when>
		<when test="nowPage==totalPage">
		<![CDATA[where rownum<=${lastPageLine} order by sellercode desc]]>
		</when>
		</choose>
	</select>
	<delete id="goodDel">
		delete from goodInfo where brandcode in 
		<foreach collection="delno" item="no" index="idx" separator="," open="(" close=")">
			${no}
		</foreach>
	</delete>
</mapper>